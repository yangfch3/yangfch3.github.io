{"version":3,"sources":["typeCheckUtil.js","stringUtil.js","clientCheck.js","otherUtil.js","arrayUtil.js","DOMUtil.js","eventUtil.js","cookieUtil.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzpLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChrjfile":"utils.js","sourcesContent":["var typeCheckUtil = {\n    isString: function(value) {\n        return typeof value === 'string';\n    },\n    isBoolean: function(value) {\n        return typeof value === 'boolean';\n    },\n    isNumber: function(value) {\n        return typeof value === 'number';\n    },\n    isUndefined: function(value) {\n        return typeof value === undefined;\n    },\n    isNull: function(value) {\n        return value === null;\n    },\n    isObject: function(value) {\n        if (value === null) {\n            return false;\n        } else if (typeof value === 'function' || typeof value === 'object') {\n            return true;\n        }\n    },\n    isPlainObject: function(value) {\n        if (!typeCheckUtil.isObject(value)) {\n            return false;\n        }\n\n        var constructor;\n        var prototype;\n\n        try {\n            constructor = obj.constructor;\n            prototype = constructor.prototype;\n\n            return constructor && prototype && prototype.hasOwnProperty('isPrototypeOf');\n        } catch (e) {\n            return false;\n        }\n    },\n    isArray: function(value) {\n        return Object.prototype.toString.call(value) === '[object Array]';\n    },\n    isFunction: function(value) {\n        return Object.prototype.toString.call(value) === '[object Function]';\n    },\n    isRegExp: function(value) {\n        return Object.prototype.toString.call(value) === '[object RegExp]';\n    },\n    // 检测 JSON 对象是否使用的是原生的（有些框架提供了自己的 JSON 对象）\n    isNativeJSON: function() {\n        return window.JSON && Object.prototype.toString.call(JSON) === '[object JSON]';\n    }\n};","var stringUtil = {\n    trim: function(str) {\n        if (typeCheckUtil.isString(str)) {\n            str = str.trim ? str.trim() : str.replace(/(^\\s*)/g,\"\").replace(/(\\s*$)/g,\"\");\n        }\n        return str;\n    },\n    trimLeft: function(str) {\n        if (typeCheckUtil.isString(str)) {\n            str = str.trimLeft ? str.trimLeft() : str.replace(/(^\\s*)/g,\"\");\n        }\n        return str;\n    },\n    trimRight: function(str) {\n        if (typeCheckUtil.isString(str)) {\n            str = str.trimRight ? str.trimRight() : str.replace(/(^\\s*)/g,\"\").replace(/(\\s*$)/g,\"\");\n        }\n        return str;\n    },\n    hyphenate: function (str) {\n        // 将字母的大写与小写数字之间以连字符隔开，并全部小写化\n        var REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n        return str.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n    }\n};\n","var client = (function() {\n    var engine = {};\n\n    var browser = {};\n\n    var system = {\n        win: false,\n        max: false,\n        x11: false,\n        ios: false,\n        android: false,\n\n        iphone: false,\n        ipod: false,\n        ipad: false,\n        nokiaN: false,\n        winMobile: false,\n\n        wii: false,\n        ps: false\n    };\n\n    var ua = navigator.userAgent;\n    if (window.opera) {\n        engine.ver = browser.ver = window.opera.version();\n        engine.type = browser.type = \"Opera\";\n    } else if (/AppleWebKit\\/(\\S+)/.test(ua)) {\n        engine.ver = RegExp['$1'];\n        engine.type = \"webkit\";\n\n        // 确定是 Chrome 还是 Safari 还是 Edge\n        if (/Edge\\/(\\S+)/.test(ua)) {\n            engine.ver = browser.ver = 'Edge';\n            engine.type = browser.type = 'Edge';\n        } else if (/Chrome\\/(\\S+)/.test(ua)) {\n            browser.ver = RegExp['$1'];\n            browser.type = \"Chorme\";\n        } else if (/Version\\/(\\S+)/.test(ua)) {\n            browser.ver = RegExp['$1'];\n            browser.type = \"Safari\";\n        } else {\n            // 近似地确定版本号\n            var safariVersion = 1;\n            if (engine.webkit < 100) {\n                safariVersion = 1;\n            } else if (engine.webkit < 312) {\n                safariVersion = 1.2;\n            } else if (engine.webkit < 412) {\n                safariVersion = 1.3;\n            } else {\n                safariVersion = 2;\n            }\n\n            browser.ver = safariVersion;\n        }\n    } else if (/KHTML\\/(\\S+)/.test(ua) || /Konqueror\\/(\\S+)/.test(ua)) {\n        engine.ver = browser.ver = RegExp['$1'];\n        engine.type = browser.type = \"Khtml\";\n    } else if (/rv:(\\S+)+\\) Gecko\\/\\d{8}/.test(ua)) {\n        engine.ver = RegExp['$1'];\n        engine.type = \"gecko\";\n\n        // 确定是不是 Firefox\n        if (/Firefox\\/(\\S+)/.test(ua)) {\n            browser.ver = RegExp['$1'];\n            browser.type = \"Firefox\";\n        }\n    } else if (/MSIE ([^;]+)/.test(ua)) {\n        engine.ver = browser.ver = RegExp['$1'];\n        engine.type = browser.type = \"IE\";\n    } else if (/rv:(\\S+)+\\) like Gecko/) {\n        engine.ver = browser.ver = RegExp['$1'];\n        engine.type = browser.type = \"IE\";\n    }\n\n    // 检测平台\n    var p = navigator.platform;\n    system.win = p.indexOf('Win') == 0;\n    system.mac = p.indexOf('Mac') == 0;\n    system.x11 = (p == 'X11') || (p.indexOf('Linux') == 0);\n\n    // 检测 windows 操作系统\n    if (system.win) {\n        if (/Win(?:dows )?([^do]{2})\\s?(\\d+\\.\\d+)?/.test(ua)) {\n            if (RegExp['$1'] == 'NT') {\n                switch (RegExp['$2']) {\n                    case '5.0':\n                        system.win = '2000';\n                        break;\n                    case '5.1':\n                        system.win = 'XP';\n                        break;\n                    case '6.0':\n                        system.win = 'Vista';\n                        break;\n                    case '6.1':\n                        system.win = '7';\n                        break;\n                    case '6.2':\n                        system.win = '8';\n                        break;\n                    case '10.0':\n                        system.win = '10';\n                        break;\n                    default:\n                        system.win = 'NT';\n                        break;\n                }\n            } else if (RegExp['$1'] == '9x') {\n                system.win = 'ME';\n            } else {\n                system.win = RegExp['$1'];\n            }\n        }\n    }\n\n    // 检测 macOS 版本号\n    if (system.mac && ua.indexOf('Mobile') == -1) {\n        if (/Mac (?:OS )?X (\\d+_\\d+_\\d+)/.test(ua)) {\n            system.mac = RegExp.$1.replace(/\\_/g, '.');\n        } else {\n            system.mac = true; // 在无法获取版本号的情况下至少确定平台\n        }\n    }\n\n    // 移动设备\n    system.iphone = ua.indexOf('iPhone') > -1;\n    system.ipad = ua.indexOf('iPad') > -1;\n    system.ipod = ua.indexOf('iPod') > -1;\n    system.nokiaN = ua.indexOf('NokiaN') > -1;\n\n    // windows mobile\n    if (system.win == 'CE') {\n        system.winMobile = system.win;\n    } else if (system.win == 'Ph') {\n        if (/Windows Phone OS (\\d+.\\d+)/.test(ua)) {\n            system.win = 'Phone';\n            system.winMobile = parseFloat(RegExp['$1']);\n        }\n    }\n\n    // 检测 iOS 版本\n    if (system.mac && ua.indexOf('Mobile') > -1) {\n        if (/CPU (?:iPhone )?OS (\\d+_\\d+)/.test(ua)) {\n            system.ios = parseFloat(RegExp.$1.replace('_', '.'));\n            system.mac = false;\n        } else {\n            system.ios = true; // 在无法获取版本号的情况下至少确定平台\n            system.mac = false;\n        }\n    }\n\n    // 检测安卓版本\n    if (/Android (\\d+\\.\\d+)/.test(ua)) {\n        system.android = parseFloat(RegExp.$1);\n    }\n\n    // 游戏系统\n    system.wii = ua.indexOf('Wii') > -1;\n    system.ps = /playstation/i.test(ua);\n\n    var temp = {};\n    for (var prop in system) {\n        if (!!system[prop]) {\n            temp.type = prop;\n            if (typeof system[prop] == \"string\" || typeof system[prop] == \"number\") {\n                temp.ver = system[prop];\n            } else {\n                temp.ver = \"can't define the version the system\";\n            }\n        }\n    }\n\n    // return\n    return {\n        engine: engine,\n        browser: browser,\n        system: temp\n    };\n})();\n","var otherUtil = {\n    each: function (obj, fn) {\n        // fn 函数能接受三个参数：obj[i]/prop, i, obj\n        if (obj && typeCheckUtil.isFunction(fn)) {\n            if (typeCheckUtil.isArray(obj) || typeCheckUtil.isNumber(obj.length)) {\n                for (var index = 0, len = obj.length; index < len; index++ ) {\n                    fn.call(obj, obj[index], index, obj);\n                }\n            } else if (typeCheckUtil.isObject(obj)) {\n                for (var prop in obj) {\n                    if (obj.hasOwnProperty(prop)) {\n                        fn.call(obj, obj[prop], prop, obj);\n                    }\n                }\n            }\n        }\n        return obj;\n    },\n    proxy: function (fn, context) {\n        var args = arrayUtil.toArray(arguments, 2);\n\n        return function () {\n            // 这里的 arguments 不是上面的 args 哦，而是 ↖️ 返回函数调用时传入的参数\n            return fn.apply(context, args.concat(arrayUtil.toArray(arguments)));\n        };\n    }\n};\n","var arrayUtil = {\n    each: otherUtil.each,\n    inArray: function (value, arr) {\n        var index = -1;\n        if (arr.indexOf) {\n            return arr.indexOf(value);\n        } else {\n            for (var i = 0, len = arr.length; i < len; i++) {\n                if (arr[i] === value) {\n                    index = i;\n                    break;\n                }\n            }\n            return index;\n        }\n    },\n    toArray: function (obj, offset) {\n        offset = offset >= 0 ? offset : 0;\n        if (Array.from) {\n            // Array.from: convert an obj or an array-like obj to an array\n            return Array.from(obj).slice(offset);\n        }\n\n        return slice.call(obj, offset);\n    },\n    deduplication: function (arr1) {\n        if (Array.from && !!(new Set())) {\n            return Array.from(new Set(arr1));\n        } else if (Array.prototype.filter) {\n            return arr1.filter(function(item, pos, self) {\n                return self.indexOf(item) == pos;\n            });\n        } else {\n            var seen = {};\n            var out = [];\n            var len = a.length;\n            var j = 0;\n            for(var i = 0; i < len; i++) {\n                var item = a[i];\n                if(seen[item] !== 1) {\n                    seen[item] = 1;\n                    out[j++] = item;\n                }\n            }\n            return out;\n        }\n    }\n};\n","var DOMUtil = {\n    getElement: function(selector, parentElement) {\n        if (!parentElement) {\n            parentElement = document;\n        }\n        var isId = (stringUtil.trim(selector).indexOf('#') === 0),\n            isClass = (stringUtil.trim(selector).indexOf('.') === 0);\n        switch (true) {\n            case isId:\n                return parentElement.querySelector ? parentElement.querySelector(selector) : parentElement.getElementById(selector);\n            case isClass:\n                return parentElement.querySelectorAll ? parentElement.querySelectorAll(selector) : parentElement.getElementsByClassName(selector);\n            default:\n                return parentElement.querySelectorAll ? parentElement.querySelectorAll(selector) : parentElement.getElementsByTagName(selector);\n        }\n    },\n\n    getFirstElementChild: function(element){\n        for (var nodes = element.childNodes, node, i = 0, len = nodes.length; i < len; i++) {\n            node = nodes[i];\n            if (node.nodeType === 1) {\n                return node;\n            }\n        }\n        return null;\n    },\n\n    getLastElementChild: function(){\n        for(var nodes = this.childNodes, node, i = nodes.length - 1; i >= 0; --i) {\n            node = nodes[i];\n            if(1 === node.nodeType) {\n                return node;\n            }\n        }\n        return null;\n    },\n\n    getNextElementSibling: function(element) {\n        if (document.body.nextElementSibling) {\n            return element.nextElementSibling;\n        } else {\n            do { element = element.nextSibling } while ( element && element.nodeType !== 1 );\n            return element;\n        }\n    },\n\n    getPrevElementSibling: function(element) {\n        if (document.body.previousElementSibling) {\n            return element.previousElementSibling;\n        } else {\n            do { element = element.previousSibling } while ( element && element.nodeType !== 1 );\n            return element;\n        }\n    },\n\n    traverseElement: function(element, process) {\n        var i,\n            len,\n            child;\n\n        if (!!element.firstElementChild) {\n            child = element.firstElementChild;\n\n            while (child != element.lastElementChild) {\n                process(child);\n                child = child.nextElementSibling;\n            }\n\n            process(child);\n        } else {\n            child = element.firstChild;\n            while (child != element.lastChild) {\n                if (child.nodeType == 1) {\n                    process(child);\n                }\n                child = child.nextSibling;\n            }\n        }\n    },\n    serializeForm: function (form) {\n        if (!form || form.nodeName.toLowerCase() !== \"FORM\".toLowerCase()) {\n            throw new Error('serialize(): The only arg must be form element!')\n        }\n\n        var parts = [],\n            field = null,\n            i,\n            len,\n            j,\n            optLen,\n            option,\n            optValue;\n\n        for (i = 0, len = form.elements.length; i < len; i++) {\n            field = form.elements[i];\n\n            if (field.name === '') {\n                continue;\n            }\n\n            switch(field.type) {\n                case 'select-one':\n                case 'select-multiple':\n                    for (j = 0, optLen = field.options.length; j < optLen; j++) {\n                        option = field.options[j];\n                        if (option.selected) {\n                            optValue = '';\n                            if (option.hasAttribute) {\n                                optValue = (option.hasAttribute('value') ? option.value : option.text);\n                            } else {\n                                optValue = (option.attributes['value'].specified ? option.value : option.text);\n                            }\n\n                            parts.push(encodeURIComponent(field.name) + '=' + encodeURIComponent(optValue));\n                        }\n                    }\n                    break;\n                case undefined:\n                case 'file':\n                case 'submit':\n                case 'reset':\n                case 'button':\n                    break;\n                case 'radio':\n                case 'checkbox':\n                    if (!field.checked) {\n                        break;\n                    }\n                default:\n                    parts.push(encodeURIComponent(field.name) + '=' + encodeURIComponent(field.value));\n            }\n        }\n\n        return parts.join('&');\n    },\n\n    toggleClass: function(element, toToggleClass) {\n        // 此方法支持同时为一系列 node 集合中的每个 node toggle class\n        if (!toToggleClass) {\n            return ;\n        }\n        if (typeCheckUtil.isNumber(element.length)) {\n            for (var i in element) {\n                if (element.hasOwnProperty(i)) {\n                    if (!typeCheckUtil.isNumber(i)) {\n                        return;\n                    } else if (!!element[i].classList) {\n                        element[i].classList.toggle(toToggleClass);\n                    } else {\n                        var classNames = element[i].className.split(/\\s+/);\n\n                        var pos = -1,\n                            k,\n                            len = classNames.length;\n                        for (k = 0; k < len; k++) {\n                            if (classNames[k] == toToggleClass) {\n                                pos = k;\n                                break;\n                            }\n                        }\n                        if (pos == -1) {\n                            classNames.push(toToggleClass);\n                        } else {\n                            classNames.splice(k, 1);\n                        }\n\n                        element[i].className = stringUtil.trim(classNames.join(' '));\n                    }\n                }\n            }\n        } else {\n            if (!!element.classList) {\n                element.classList.toggle(toToggleClass);\n            } else {\n                var classNames2 = element.className.split(/\\s+/);\n\n                var pos2 = -1,\n                    x,\n                    len2 = classNames2.length;\n\n                for (x = 0; x < len2; x++ ) {\n                    if (classNames2[x] == toToggleClass) {\n                        pos2 = x;\n                        break;\n                    }\n                }\n\n                if (pos2 == -1) {\n                    classNames2.push(toToggleClass);\n                } else {\n                    classNames2.splice(pos2, 1);\n                }\n                element.className = stringUtil.trim(classNames2.join(' '));\n            }\n        }\n    },\n\n    getStyle: function(element, prop) {\n        if (arguments[1]) {\n            if (document.defaultView && document.defaultView.getComputedStyle) {\n                return document.defaultView.getComputedStyle(element, null)[prop];\n            } else if (element.currentStyle) {\n                return element.currentStyle[prop];\n            } else {\n                return element.style[prop];\n            }\n        } else {\n            if (document.defaultView && document.defaultView.getComputedStyle) {\n                return document.defaultView.getComputedStyle(element, null);\n            } else if (element.currentStyle) {\n                return element.currentStyle;\n            } else {\n                return element.style;\n            }\n        }\n    },\n    setStyle: function (element, toAddStyleObj) {\n        var style = element.style;\n        if (Object.assign) {\n            Object.assign(style, toAddStyleObj);\n        }\n        otherUtil.each(toAddStyleObj, function (value, prop) {\n            style[prop] = value;\n        })\n\n    },\n    hasClass: function (element, toCheckClassName) {\n        return element.classList ? element.classList.contains(value) : element.className.indexOf(toCheckClassName) > -1;\n    },\n    isContain: function (nodeA, nodeB) {\n        if (document.body.contains) {\n            return nodeA.contains(nodeB);\n        } else if (document.body.compareDocumentPosition) {\n            return !!(nodeA.compareDocumentPosition(nodeB) & 16);\n        } else {\n            var node = nodeB.parentNode;\n            do {\n                if (node === nodeA) {\n                    return true;\n                } else {\n                    node = node.parentNode;\n                }\n            } while (node !== null);\n\n            return false;\n        }\n    },\n    getElementPos: function (element) {\n        if (element.getBoundingClientRect) {\n            return {\n                // element.getBoundingClientRect() 获取元素的在当前视口的左边\n                x: element.getBoundingClientRect().left + document.body.scrollLeft,\n                y: element.getBoundingClientRect().top + document.body.scrollTop\n            };\n        }\n        var actualLeft = element.offsetLeft;\n        var actualTop = element.offsetTop;\n        var current = element.offsetParent;\n        while (current !== null){\n            // 逐层遍历 offsetParent 和 offsetLeft, offsetTop\n            actualLeft += current.offsetLeft;\n            actualTop += current.offsetTop;\n            current = current.offsetParent;\n        }\n        return {\n            x: actualLeft,\n            y: actualTop\n        }\n    },\n    scrollIntoView: function (element) {\n        if (element.scrollIntoView) {\n            element.scrollIntoView();\n        } else {\n            var pos = DOMUtil.getElementPos(element);\n            document.body.scrollTop = pos.y;\n        }\n    },\n    empty: function (element) {\n        // 清空某个元素\n        while (element.firstChild) {\n            element.removeChild(element.firstChild);\n        }\n    },\n    getImageSize: function (image, callback) {\n        // pass a image node, and a callback function\n        var newImage;\n\n        // Modern browsers\n        if (image.naturalWidth) {\n            // callback(number, number)\n            return callback(image.naturalWidth, image.naturalHeight);\n        }\n\n        // IE8: Don't use `new Image()` here\n        newImage = document.createElement('img');\n\n        newImage.onload = function () {\n            callback(this.width, this.height);\n        };\n\n        newImage.src = image.src;\n    },\n    getImageName: function (url) {\n        // get a url, parse and return the image name\n        return isString(url) ? url.replace(/^.*\\//, '').replace(/[\\?&#].*$/, '') : '';\n    },\n    setText: function (element, text) {\n        if (!typeCheckUtil.isUndefined(element.textContent)) {\n            element.textContent = text;\n        } else {\n            element.innerText = text;\n        }\n    },\n    getData: function (element, name) {\n        if (!!name) {\n            if (element.dataset) {\n                return element.dataset[name];\n            } else {\n                return element.getAttribute(name);\n            }\n        } else {\n            if (element.dataset) {\n                return element.dataset;\n            } else {\n                var temp = {};\n                for (var i = 0, len = element.attributes.length; i < len; i++) {\n                    if (element.attributes[i].nodeName.indexOf(\"data-\") > -1) {\n                        temp[element.attributes[i].nodeName.slice(5)] = element.attributes[i].nodeValue;\n                    }\n                }\n                return temp;\n            }\n        }\n    },\n    setData: function(element, name, data) {\n        if (typeCheckUtil.isObject(data)) {\n            for (var prop in data) {\n                if (data.hasOwnProperty(prop)) {\n                    element.dataset[prop] = data[prop];\n                }\n            }\n        } else if (element.dataset) {\n            element.dataset[name] = data;\n        } else {\n            element.setAttribute('data-' + hyphenate(name), data);\n        }\n    },\n    removeData: function (element, name) {\n        if (typeCheckUtil.isObject(element[name])) {\n            delete element[name];\n        } else if (element.dataset) {\n            delete element.dataset[name];\n        } else {\n            element.removeAttribute('data-' + stringUtil.hyphenate(name));\n        }\n    }\n};\n","var eventUtil = {\n    addEventHandler: function(element, type, handler) {\n        if (element.addEventListener) {\n            element.addEventListener(type, handler, false);\n        } else if (element.attachEvent) {\n            element.attachEvent('on' + type, handler);\n        } else {\n            element['on' + type] = handler;\n        }\n    },\n\n    getEvent: function(event) {\n        return event ? event : window.event;\n    },\n\n    // For mouseover, mouseout events\n    getRelatedTarget: function(event) {\n        if (event.relatedTarget) {\n            return event.relatedTarget;\n        } else if (event.toElement) {\n            return event.toElement;\n        } else if (event.fromElement) {\n            return event.fromElement;\n        } else {\n            return null;\n        }\n    },\n\n    // For mousedown, mouseup events\n    getButton: function(event) {\n        if (document.implementation.hasFeature('MouseEvents', '2.0')) {\n            return event.button;\n        } else {\n            switch (event.button) {\n                case 0:\n                case 1:\n                case 3:\n                case 5:\n                case 7:\n                    return 0;\n                case 2:\n                case 6:\n                    return 2;\n                case 4:\n                    return 1;\n            }\n        }\n    },\n\n    // For mouseWheel event\n    getWheelDelta: function(event) {\n        if (event.wheelDelta) {\n            return event.wheelDelta;\n        } else {\n            return -event.detail * 40;\n        }\n    },\n\n    // For keyboard event\n    getCharCode: function(event) {\n        if (typeof event.charCode) {\n            return event.charCode;\n        } else {\n            return event.keycode;\n        }\n    },\n\n    getTarget: function(event) {\n        return event.target || event.srcElement;\n    },\n\n    preventDefault: function(event) {\n        if (event.preventDefault) {\n            event.preventDefault();\n        } else {\n            event.returnValue = false;\n        }\n    },\n\n    stopPropagation: function(event) {\n        if (event.stopPropagation) {\n            event.stopPropagation();\n        } else {\n            event.cancelBubble = true;\n        }\n    },\n\n    removeEventHandler: function(element, type, handler) {\n        if (element.removeEventListener) {\n            element.removeEventListener(type, handler, false);\n        } else if (element.detachEvent) {\n            element.detachEvent('on' + type, handler);\n        } else {\n            element['on' + type] = null;\n        }\n    },\n\n    // For copy, cut and paste event\n    getClipboardText: function(event) {\n        var clipboardData = (event.clipboardData || window.clipboardData);\n        return clipboardData.getData('text');\n    },\n\n    setClipboardDataText: function(event, value) {\n        if (event.clipboardData) {\n            return event.clipboardData.setData('text/plain', value);\n        } else if(window.clipboardData) {\n            return window.clipboardData.setData('text', value);\n        }\n    },\n\n\n};\n","var cookies = function (data, opt) {\n    // defaults 方法的功能是利用另一个对象的属性和方法扩展（extend）一个对象\n    function defaults (obj, defs) {\n        obj = obj || {};\n        for (var key in defs) {\n            if (obj[key] === undefined) {\n                obj[key] = defs[key];\n            }\n        }\n        return obj;\n    }\n\n    // 初始化全局对象 cookies 的默认配置\n    // ！！！这里的 cookies 就是外部函数 cookies，这时的 cookies 就是拥有着这些默认属性的一个函数对象\n    defaults(cookies, {\n        // Basic\n        expires: 365 * 24 * 3600,\n        path: '/',\n        secure: window.location.protocol === 'https:',\n\n        // Advanced\n        nulltoremove: true,\n        autojson: true,\n        autoencode: true,\n        encode: function (val) {\n            return encodeURIComponent(val);\n        },\n        decode: function (val) {\n            return decodeURIComponent(val);\n        },\n        test: function(res) {\n            console.log(res);\n        }\n    });\n\n    // 结合库的默认配置与用户传入的自定义配置（第二个参数），整合形成新的配置对象 opt\n    opt = defaults(opt, cookies);\n\n    // 设定 expires 时间的工具函数\n    // 接收一个 Date 对象或一个数字（毫秒数）\n    function expires (time) {\n        var expires = time;\n        if (!(expires instanceof Date)) {\n            expires = new Date();\n            expires.setTime(expires.getTime() + (time * 1000));\n        }\n        return expires.toUTCString();\n    }\n\n    // 如果传入的 data 是一个字符串，那么就是在 document 里查询有无这个字段\n    if (typeof data === 'string') {\n        // 将 document.cookie 值转换为对象，查询里面有无我们传入的字符串参数 \"data\" 属性\n        // value 为查找后的字符串或 undefined\n        var value = document.cookie.split(/;\\s*/)\n            .map(opt.autoencode ? opt.decode : function (d) { return d; })\n            .map(function (part) { return part.split('='); })\n            .reduce(function (parts, part) {\n                // parts 的初始值一个空对象\n                // reduce 后将存储 document.cookie 数组 [[key, value], [key, value]...] 恢复而来的对象\n                parts[part[0]] = part[1];\n                return parts;\n            }, {})[data];\n        if (!opt.autojson) return value;\n        try {\n            // 确保返回的是字符串\n            return JSON.parse(value);\n        } catch (e) {\n            return value;\n        }\n    }\n\n    // 这段代码就是真正的写入\n    for (var key in data) {\n        var expired = data[key] === undefined || (opt.nulltoremove && data[key] === null);\n        var str = opt.autojson ? JSON.stringify(data[key]) : data[key];\n        var encoded = opt.autoencode ? opt.encode(str) : str;\n        if (expired) encoded = '';\n        var res = opt.encode(key) + '=' + encoded +\n            (opt.expires ? (';expires=' + expires(expired ? -10000 : opt.expires)) : '') +\n            ';path=' + opt.path +\n            (opt.domain ? (';domain=' + opt.domain) : '') +\n            (opt.secure ? ';secure' : '');\n        if (opt.test) opt.test(res);\n        // document.cookie 默认的写入是追加写入，而不是覆盖写入\n        document.cookie = res;\n    }\n    // 最后又返回 cookies 函数对象，实现了链式调用\n    return cookies;\n};\n\n// 兼容各个模块加载器：this 指向的是全局对象\n// (function webpackUniversalModuleDefinition (root) {\n//     if (typeof exports === 'object' && typeof module === 'object') {\n//         module.exports = cookies;\n//     } else if (typeof define === 'function' && define.amd) {\n//         define('cookies', [], cookies);\n//     } else if (typeof exports === 'object') {\n//         exports['cookies'] = cookies;\n//     } else {\n//         root['cookies'] = cookies;\n//     }\n// })(this);\n"],"sourceRoot":"/source/"}